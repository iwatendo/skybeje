@startuml

title SkyBejeメインシーケンス
hide footbox

!define Dashborad    Dashborad
!define HomeInstance HomeInstance
!define HomeVisitor  HomeVisitor
!define CastInstance CastInstance
!define CastVisitor  CastVisitor

participant "Dashborad"    as Dashboard
participant "HomeInstance" as HomeInstance
participant "HomeVisitor"  as HomeVisitor
participant "CastInstance" as CastInstance
participant "CastVisitor"  as CastVisitor
participant "SkyWay"       as SkyWay

create HomeInstance
Dashboard     -> HomeInstance   : BOOT
HomeInstance  -> SkyWay         : PeerID 要求
SkyWay        -> HomeInstance   : PeerID 払出 (PeerA)

create HomeVisitor
HomeInstance  -> HomeVisitor    : BOOT
HomeVisitor   -> SkyWay         : PeerID 要求
SkyWay        -> HomeVisitor    : PeerID 払出 (PeerB)
HomeVisitor   -> Dashboard      : Notify PeerID(PeerB)
HomeVisitor   -> SkyWay         : DataConnection 要求 (PeerB <-> PeerA)
SkyWay        -> HomeVisitor    : DataConnection Open通知 (PeerB <-> PeerA)
SkyWay        -> HomeInstance   : DataConnection Open通知 (PeerA <-> PeerB)
HomeVisitor   -> HomeInstance   : Send: [ClientBoot]（起動通知）
HomeInstance  -> HomeVisitor    : Send: [ConnInfo]（起動情報）
HomeVisitor   -> HomeInstance   : Send: [UseActor]（使用アクター通知）
HomeInstance  -> HomeVisitor    : Send: [RoomActorMember]（ルーム内のメンバー情報）
HomeVisitor   -> HomeInstance   : Send: [GetRoom]（ルーム情報要求）
HomeInstance  -> HomeVisitor    : Send: [RoomServant]（ライブキャスト情報）
HomeVisitor   -> HomeInstance   : Send: [GetTimeline]（タイムラインの要求）
HomeInstance  -> HomeVisitor    : Send: [Timeline]（タイムライン）
note right #aqua : 初期化処理完了

HomeVisitor   -> HomeInstance   : Send: [ChatMessage] チャット
note right #aqua : チャット入力
HomeInstance  -> HomeVisitor    : Send: [Timeline]（タイムライン）
note right #aqua : 全ての接続クライアントに通知


create CastInstance
Dashboard     -> CastInstance   : BOOT
note right #aqua : 配信画面起動
CastInstance  -> SkyWay         : Peer要求
SkyWay        -> CastInstance   : Peer払出 (PeerC)
CastInstance  -> SkyWay         : DataConnection 要求 (PeerC <-> PeerB)
SkyWay        -> CastInstance   : DataConnection Open通知 (PeerC <-> PeerB)
SkyWay        -> HomeVisitor    : DataConnection Open通知 (PeerB <-> PeerC)
CastInstance  -> HomeVisitor    : Send : [CastInstance]（ライブ配信起動通知）
HomeVisitor   -> HomeInstance   : Send : [Servant]（ライブ配信起動通知）
HomeInstance  -> HomeVisitor    : Send : [RoomServant]（ルーム内の配信一覧）

CastInstance  -> CastInstance   : ストリーム生成
note right #aqua : 配信開始
CastInstance  -> HomeVisitor    : Send : [CastInstance] (配信開始)
HomeVisitor   -> HomeInstance   : Send : [Servant] (配信開始)
HomeInstance  -> HomeVisitor    : Send : [RoomServant] (配信開始)

create CastVisitor
HomeVisitor   -> CastVisitor    : BOOT
note right #aqua : 全クライアントで起動
CastVisitor   -> SkyWay         : Peer要求
SkyWay        -> CastVisitor    : Peer払出（PeerD)

CastVisitor   -> SkyWay         : Data/Media Connection 要求 (PeerD <-> PeerC)
SkyWay        -> CastVisitor    : Data/Media Connection Open通知 (PeerD <-> PeerC)
SkyWay        -> CastInstance   : Data/Media Connection Open通知 (PeerC <-> PeerD)

CastVisitor   -> CastInstance   : Send : [GetCastInfo]
CastInstance  -> CastVisitor    : Send : [CastSetting]

CastInstance  -> CastVisitor    : MediaStream
CastVisitor   -> CastVisitor    : ストリーミング再生
note right #aqua : ライブキャスト表示

CastVisitor   -> CastInstance   : Send : [IconCursor]
note right #aqua : カーソル表示開始
CastInstance  -> CastVisitor    : Send : [IconCursor]

CastVisitor   -> SkyWay         : DataConnection 要求(PeerD <-> PeerB)
SkyWay        -> CastVisitor    : DataConnection Open通知 (PeerD <-> PeerB)
SkyWay        -> HomeVisitor    : DataConnection Open通知 (PeerB <-> PeerD)

CastVisitor   -> HomeVisitor    : Send : [GetIcon]
HomeVisitor   -> CastVisitor    : Send : [Icon]


@enduml